{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","items","removework","editwork","className","map","item","id","title","type","onClick","Alert","dic","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","type_","msg","alertclass","App","useState","name","setName","setList","isEditing","setIsEditing","editID","seteditID","show","alert","setAlert","onSubmit","event","preventDefault","work","newItem","Date","getTime","toString","value","onChange","prop","target","length","filter","find","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96937e00.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FaRecycle,FaQuidditch } from 'react-icons/fa'\r\nfunction List({items,removework,editwork}){\r\n  return <div className=\"todolist-list\">\r\n\r\n      {items.map((item)=>{\r\n        const id=item.id\r\n        const title=item.title\r\n          return <div key={id} className=\"todolist-item\">\r\n              <p className=\"title\">{title}</p>\r\n              <div className=\"btn-container\">\r\n                   <button type=\"button\" className=\"edit-btn\"\r\n                   onClick={()=>editwork(id)}>\r\n                     <FaRecycle/>\r\n                   </button>\r\n                   <button type=\"button\" className=\"delete-btn\"\r\n                     onClick={()=>removework(id)} >\r\n                     <FaQuidditch/>\r\n                   </button>\r\n              </div>\r\n          </div>\r\n\r\n      })}\r\n  </div>\r\n\r\n}\r\n\r\nexport default List\r\n\r\n\r\n// FaEdit, FaTrash","import React, { useEffect } from 'react'\r\n\r\nfunction Alert({dic ,removeAlert,list}){\r\n\r\n  useEffect(()=>{\r\n     const timeout= setTimeout(() => {\r\n      removeAlert()\r\n     }, 2000)\r\n    return ()=>clearTimeout(timeout)\r\n  },[list])\r\n\r\n  const type_=dic.type;\r\n  const msg=dic.msg;\r\n  const alertclass='alert-'+type_;\r\n  return <p className={'alert '+alertclass}>{msg}</p>\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nfunction App() {\n\n  const [name,setName]=useState('');\n  const [list,setList]=useState([]);\n  const [isEditing,setIsEditing]=useState(false);\n  const [editID,seteditID]=useState(null);\n  const [alert,setAlert]=useState({\n    show:false,\n    msg:\"\",\n    type:\"\"\n  })\n\n\n function onFormSubmit(event){\n    event.preventDefault();\n    //console.log(\"button clicked\");\n     if(!name){\n       setAlert({ show:true, msg:\"Add Some Work To List\", type:\"failure\"})\n     }\n     else if(name && isEditing){\n        setList(\n          list.map((work)=>{\n            if(work.id===editID){\n              return {...work,title:name}\n            }\n            return work\n          })\n        )\n        setName('');\n        seteditID(null)\n        setIsEditing(false)\n        setAlert({ show:true, msg:\"Work Edited Successfully\",type:\"success\"})\n     }\n     else {\n        setAlert({ show:true, msg:\"Work Added To List\",type:\"success\"})\n\n         const newItem=\n         {\n           id:new Date().getTime().toString(),\n           title:name\n         }\n         setList([newItem,...list])\n         setName('')\n     }\n  }\n\n\n function changeAlert(){\n      setAlert({show:false, msg:\"\",type:\"\"})\n }\n\n\n function clearList(){\n   setAlert({show:true, msg:\"Cleared Full List\",type:\"success\"}) \n   setList([])\n }\n\n\n function removework(id){\n  setAlert({show:true, msg:\"Work Removed\",type:\"failure\"}) \n  setList(list.filter((work)=>{\n      return work.id!==id\n  }))\n }\n\n function editwork(id){\n     const work=list.find((i)=>i.id === id)\n     setIsEditing(true)\n     seteditID(id)\n     setName(work.title)\n\n }\n\n\n  return <div className=\"section-center\">\n      <form className=\"todolist-form\" onSubmit={onFormSubmit}> \n\n              {alert.show && <Alert dic={alert} removeAlert={changeAlert}\n                list={list}\n              />}\n\n              <h3>to do list</h3>\n\n              <div className=\"form-control\">\n                  <input type=\"text\" className=\"todolist\" value={name} \n                    onChange={(prop)=>{setName(prop.target.value)}}/>\n\n                  <button type=\"submit\" className=\"submit-btn\">\n                      {isEditing?'Edit':'Enter'}\n                    </button>  \n              </div>\n      </form>\n  \n      {list.length >0 && \n      <div className=\"todolist-container\">\n           <List items={list} removework={removework} editwork={editwork}/>\n           <button className=\"clear-btn\" onClick={clearList}>Clear Full List</button>\n      </div>\n      }\n  </div>\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}